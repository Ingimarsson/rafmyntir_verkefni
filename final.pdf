%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 5 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
6 0 obj
<<
/Contents 38 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
7 0 obj
<<
/Contents 39 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
8 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://chainz.cryptoid.info/smly/tx.dws?8838d9bf1159ddf20ca46549eaab50c620194e069f6a1985810fc66618234b8e.htm)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 366.5703 531.3129 378.5703 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://chainz.cryptoid.info/smly/tx.dws?8838d9bf1159ddf20ca46549eaab50c620194e069f6a1985810fc66618234b8e.htm)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 354.5703 132.1829 366.5703 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Annots [ 8 0 R 9 0 R ] /Contents 40 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
11 0 obj
<<
/Contents 41 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
12 0 obj
<<
/Contents 42 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
13 0 obj
<<
/Contents 43 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
14 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://chainz.cryptoid.info/smly/address.dws?3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc.html)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 692.3318 482.2629 704.3318 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://chainz.cryptoid.info/smly/address.dws?3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc.htm)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 103.9825 480.0429 115.9825 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Annots [ 14 0 R 15 0 R ] /Contents 44 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
17 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/tutor-web/smileyCoin)
>> /Border [ 0 0 0 ] /Rect [ 77.14291 714.0236 252.2029 726.0236 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/tutor-web/smileyCoin/pull/14)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 678.7736 269.9929 690.7736 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/Ingimarsson/smlymailer)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 579.7736 249.4129 591.7736 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Annots [ 17 0 R 18 0 R 19 0 R ] /Contents 45 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 37 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
21 0 obj
<<
/Outlines 23 0 R /PageLabels 46 0 R /PageMode /UseNone /Pages 37 0 R /Type /Catalog
>>
endobj
22 0 obj
<<
/Author () /CreationDate (D:20191201220549+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20191201220549+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (SmileyCoin tutor-web assignments) /Trapped /False
>>
endobj
23 0 obj
<<
/Count 16 /First 24 0 R /Last 36 0 R /Type /Outlines
>>
endobj
24 0 obj
<<
/Count 1 /Dest [ 6 0 R /XYZ 62.69291 707.0236 0 ] /First 25 0 R /Last 25 0 R /Next 26 0 R /Parent 23 0 R 
  /Title (Task 3)
>>
endobj
25 0 obj
<<
/Dest [ 6 0 R /XYZ 62.69291 235.1232 0 ] /Parent 24 0 R /Title (Q&A)
>>
endobj
26 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 626.8966 0 ] /Next 27 0 R /Parent 23 0 R /Prev 24 0 R /Title (Task 4)
>>
endobj
27 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 341.8203 0 ] /Next 28 0 R /Parent 23 0 R /Prev 26 0 R /Title (Task 5)
>>
endobj
28 0 obj
<<
/Dest [ 11 0 R /XYZ 62.69291 484.6236 0 ] /Next 29 0 R /Parent 23 0 R /Prev 27 0 R /Title (Task 6)
>>
endobj
29 0 obj
<<
/Count 2 /Dest [ 12 0 R /XYZ 62.69291 522.6236 0 ] /First 30 0 R /Last 31 0 R /Next 32 0 R /Parent 23 0 R 
  /Prev 28 0 R /Title (Task 7)
>>
endobj
30 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 489.6236 0 ] /Next 31 0 R /Parent 29 0 R /Title (Creating and sending from multisig addresses.)
>>
endobj
31 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 727.8236 0 ] /Parent 29 0 R /Prev 30 0 R /Title (Spending from the multisig address)
>>
endobj
32 0 obj
<<
/Count 2 /Dest [ 16 0 R /XYZ 62.69291 679.5818 0 ] /First 33 0 R /Last 34 0 R /Next 35 0 R /Parent 23 0 R 
  /Prev 29 0 R /Title (Task 9)
>>
endobj
33 0 obj
<<
/Dest [ 16 0 R /XYZ 62.69291 646.5818 0 ] /Next 34 0 R /Parent 32 0 R /Title (Creating and sending from multisig addresses.)
>>
endobj
34 0 obj
<<
/Dest [ 16 0 R /XYZ 62.69291 335.6325 0 ] /Parent 32 0 R /Prev 33 0 R /Title (Without OP_RETURN)
>>
endobj
35 0 obj
<<
/Dest [ 20 0 R /XYZ 62.69291 765.0236 0 ] /Next 36 0 R /Parent 23 0 R /Prev 32 0 R /Title (Task 10)
>>
endobj
36 0 obj
<<
/Dest [ 20 0 R /XYZ 62.69291 666.0236 0 ] /Parent 23 0 R /Prev 35 0 R /Title (Task 11)
>>
endobj
37 0 obj
<<
/Count 8 /Kids [ 6 0 R 7 0 R 10 0 R 11 0 R 12 0 R 13 0 R 16 0 R 20 0 R ] /Type /Pages
>>
endobj
38 0 obj
<<
/Length 4864
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 68.24488 0 Td (SmileyCoin tutor-web assignments) Tj T* -68.24488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 719.0236 cm
q
BT 1 0 0 1 0 2 Tm 190.4899 0 Td 12 TL /F1 10 Tf 0 0 0 rg (Brynjar Ingimarsson) Tj T* -190.4899 0 Td ET
Q
Q
q
1 0 0 1 62.69291 686.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 3) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 656.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .706488 Tw (In this example we show how we can prove our ownership of a base address. This is done by signing a) Tj T* 0 Tw (message, resulting in a signature that others can verify.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 638.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's start by creating a new address to use in this example:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 592.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL ($ smileycoin-cli getnewaddress) Tj T* (BQozXBY6dd2zHJdKqvj13XoM7mHNS7b4zC) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 560.8236 cm
q
BT 1 0 0 1 0 14 Tm 2.23936 Tw 12 TL /F1 10 Tf 0 0 0 rg (Now we sign a message using this address. This is done with the command ) Tj /F4 10 Tf (signmessage) Tj /F1 10 Tf ( with the) Tj T* 0 Tw (following syntax) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 527.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smileycoin-cli signmessage [address] [message]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 507.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We are going to sign the message "Hello World") Tj T* ET
Q
Q
q
1 0 0 1 62.69291 450.9734 cm
q
q
.988825 0 0 .988825 0 0 cm
q
1 0 0 1 6.6 6.674587 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 474 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ smileycoin-cli signmessage BQozXBY6dd2zHJdKqvj13XoM7mHNS7b4zC "Hello World") Tj T* (H2ncRcee8kGRYMB0zrEwBabAskfvkp/Fxj4Yr1XV7PLq3H7b3tQe5abx/ne6W5RLVWHtVx6lOTW2) Tj T* (IUugSLWP1Hw=) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 418.9734 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .306457 Tw (Creating a signature requires having the private key that is behind our address, meaning that no one else) Tj T* 0 Tw (could create this signature.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 388.9734 cm
q
BT 1 0 0 1 0 14 Tm .67528 Tw 12 TL /F1 10 Tf 0 0 0 rg (We could now tell people to verify that the message "Hello World" corresponds to our base address and) Tj T* 0 Tw (this signature. This can be done with the command ) Tj /F4 10 Tf (verifymessage) Tj /F1 10 Tf ( in the wallet.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 355.7734 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smileycoin-cli verifymessage [address] [signature] [message]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 335.7734 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's verify the message we previously signed) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 279.1232 cm
q
q
.988825 0 0 .988825 0 0 cm
q
1 0 0 1 6.6 6.674587 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 474 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ verifymessage BQozXBY6dd2zHJdKqvj13XoM7mHNS7b4zC H2ncRcee8kGRYMB0zrEwBabAs) Tj T* (kfvkp/Fxj4Yr1XV7PLq3H7b3tQe5abx/ne6W5RLVWHtVx6lOTW2IUugSLWP1Hw= "Hello World") Tj T* (true) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 247.1232 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.05811 Tw (The command returns true proving that this message came from us, thus proving our ownership of this) Tj T* 0 Tw (address.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 217.1232 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Q) Tj (&) Tj (A) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 199.1232 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Q: Is the following signature valid?) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 153.0491 cm
q
q
.773863 0 0 .773863 0 0 cm
q
1 0 0 1 6.6 8.528639 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 606 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (Message:   "Hello World") Tj T* (Signature: IM+nbVpZUtghBACRy62TNa5+0I77+A+RriaN/9FOeSYdthT/cDJ6viH4NY9rYdJ9W+nZOG7HxRr34LiOeamT2wk=) Tj T* (Address:   BHdiMnruJtB9SifGefbEdq6yY473hsBoDh) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 133.0491 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (A: Yes) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 115.0491 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This is a valid signature, we can see that by using the ) Tj /F2 10 Tf (verifymessage) Tj /F1 10 Tf ( command) Tj T* ET
Q
Q
 
endstream
endobj
39 0 obj
<<
/Length 4153
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 724.9706 cm
q
q
.814085 0 0 .814085 0 0 cm
q
1 0 0 1 6.6 8.107263 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 576 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ smileycoin-cli verifymessage BHdiMnruJtB9SifGefbEdq6yY473hsBoDh IM+nbVpZ) Tj T* (UtghBACRy62TNa5+0I77+A+RriaN/9FOeSYdthT/cDJ6viH4NY9rYdJ9W+nZOG7HxRr34LiOeamT2wk= "Hello World") Tj T* (true) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 704.9706 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Q: Is the following signature valid?) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 658.8966 cm
q
q
.773863 0 0 .773863 0 0 cm
q
1 0 0 1 6.6 8.528639 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 606 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (Message:   "Hello World") Tj T* (Signature: H9rMpBOIoiaS+3e+eFxS8B45T3nEMvnkPnniuPGac9lG3MEVqmQDXyPi1LOl9FDVJ/6PJv6drQhSjV63MZNtgkY=) Tj T* (Address:   BHdiMnruJtB9SifGefbEdq6yY473hsBoDh) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 638.8966 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (A: No) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 605.8966 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 4) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 575.8966 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .676488 Tw (In this task we show how to create a transaction that sends a part of an unspent transaction back to the) Tj T* 0 Tw (same address, instead of creating a new one.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 557.8966 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here is an unspent transaction we will use for this example.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 416.6966 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 110 Tm /F3 10 Tf 12 TL ({) Tj T* (    "txid" : "eaa3da030a5e7b94f51aa319eca3875378ae1de975bf77bf947c838e032bf1) Tj T* (    48",) Tj T* (    "vout" : 1,) Tj T* (    "address" : "BCTw1xBdb6y1iqfVhWiPgPMnBJFqtR9Dt3",) Tj T* (    "account" : "",) Tj T* (    "scriptPubKey" : "76a91457ea3e6c75acf4203a3c84a92fa9230f0110391188ac",) Tj T* (    "amount" : 10000.00000000,) Tj T* (    "confirmations" : 1) Tj T* (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 396.6966 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can see your unspent transactions by using) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 363.4966 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smileycoin-cli listunspent) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 331.4966 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .53152 Tw (I want to send 9900 SMLY to BEvkzqdQwhsPxDdsuFK8PVYtAxAbGxkreM. The easiest way would be to) Tj T* 0 Tw (use) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 298.2966 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smileycoin-cli sendtoaddress [address] [amount]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 266.2966 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.128512 Tw (But this would create a new unspent transaction with a new address. We want to keep the rest of our funds) Tj T* 0 Tw (in the same address, so we will need to create a raw transaction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 97.09352 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 168 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 146 Tm /F3 10 Tf 12 TL (./smileycoin-cli createrawtransaction) Tj T* ('[{) Tj T* (     "txid":"f419241c8aeae838390be2515a39c56d012744fc68287951266de36fa69deb1) Tj T* (f",) Tj T* (     "vout":1) Tj T* (}]') Tj T* ('{) Tj T* (    "BCTw1xBdb6y1iqfVhWiPgPMnBJFqtR9Dt3":99,) Tj T* (    "BEvkzqdQwhsPxDdsuFK8PVYtAxAbGxkreM":9900) Tj T* (}') Tj T*  T* (010000000148f12b038e837c94bf77bf75e91dae785387a3ec19a31af5947b5e0a03daa3ea01) Tj T* (00000000ffffffff020003164e020000001976a91457ea3e6c75acf4203a3c84a92fa9230f011039) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
40 0 obj
<<
/Length 4706
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.5818 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (1188ac002c9980e60000001976a91472ed5cdf201eb86b466ed96e32c865dd25094aeb88ac000000) Tj T* (00) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 709.5818 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This returns the transaction in hex code. As always, we need to sign the transaction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 547.8592 cm
q
q
.908526 0 0 .908526 0 0 cm
q
1 0 0 1 6.6 7.264512 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 516 168 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 146 Tm /F3 10 Tf 12 TL ($ smileycoin-cli signrawtransaction 010000000148f12b038e837c94bf77bf75e91dae) Tj T* (785387a3ec19a31af5947b5e0a03daa3ea0100000000ffffffff020003164e020000001976a91457) Tj T* (ea3e6c75acf4203a3c84a92fa9230f0110391188ac002c9980e60000001976a91472ed5cdf201eb8) Tj T* (6b466ed96e32c865dd25094aeb88ac00000000) Tj T* ({) Tj T* (    "hex" : "010000000148f12b038e837c94bf77bf75e91dae785387a3ec19a31af5947b5) Tj T* (    e0a03daa3ea010000006a47304402203eb51038ddfef327fb7e0d420ef7396a990dfe702e874eae3) Tj T* (    0aac002b1d910f302207ea60529f2d9b5438f69b0fc5d5fcd1111c18750b3df4e2329755a8af17dc) Tj T* (    97b01210225da3a80b797627be0bfd94037b69d06b6eea6ce7059b2a269f2c8e688de8b01fffffff) Tj T* (    f020003164e020000001976a91457ea3e6c75acf4203a3c84a92fa9230f0110391188ac002c9980e) Tj T* (    60000001976a91472ed5cdf201eb86b466ed96e32c865dd25094aeb88ac00000000",) Tj T* (    "complete" : true) Tj T* (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 527.8592 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (And then we send the transaction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 415.8203 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 108 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F3 10 Tf 12 TL ($ smileycoin-cli sendrawtransaction sendrawtransaction 010000000148f12b038e8) Tj T* (37c94bf77bf75e91dae785387a3ec19a31af5947b5e0a03daa3ea010000006a47304402203eb5103) Tj T* (8ddfef327fb7e0d420ef7396a990dfe702e874eae30aac002b1d910f302207ea60529f2d9b5438f6) Tj T* (9b0fc5d5fcd1111c18750b3df4e2329755a8af17dc97b01210225da3a80b797627be0bfd94037b69) Tj T* (d06b6eea6ce7059b2a269f2c8e688de8b01ffffffff020003164e020000001976a91457ea3e6c75a) Tj T* (cf4203a3c84a92fa9230f0110391188ac002c9980e60000001976a91472ed5cdf201eb86b466ed96) Tj T* (e32c865dd25094aeb88ac00000000) Tj T* (8838d9bf1159ddf20ca46549eaab50c620194e069f6a1985810fc66618234b8e) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 383.8203 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .859988 Tw (We can look at the transaction in a blockchain explorer, where we see that the input address is also an) Tj T* 0 Tw (output address.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 353.8203 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (https://chainz.cryptoid.info/smly/tx.dws?8838d9bf1159ddf20ca46549eaab50c620194e069f6a1985810fc66) Tj T* (618234b8e.htm) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 320.8203 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 5) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 302.8203 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In this task we will try to find out how transaction fees work.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 284.8203 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (When we create a transaction using) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 251.6203 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smileycoin-cli sendtoaddress [address] [amount]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 219.6203 cm
q
BT 1 0 0 1 0 14 Tm 1.339431 Tw 12 TL /F1 10 Tf 0 0 0 rg (The wallet automatically adds 1 SMLY as transaction fee, this is the default fee as can be seen using) Tj T* 0 Tw /F2 10 Tf (getinfo) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 126.4203 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F3 10 Tf 12 TL ($ smileycoin-cli getinfo) Tj T*  T* (...) Tj T* (    "paytxfee" : 1.00000000,) Tj T* (    "relayfee" : 0.00100000,) Tj T* (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 94.42032 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.092651 Tw (The transaction fee \(paytxfee\) is the minimum amount for miners to include your transaction in their) Tj T* 0 Tw (blocks. If the fee is less than 1 SMLY your transaction will probably not make it into the blockchain.) Tj T* ET
Q
Q
 
endstream
endobj
41 0 obj
<<
/Length 5090
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The relay fee is the minimum transaction fee for other wallets to relay your transaction over the network.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Let's try to create a transaction with no transaction fee.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 689.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL ($ smileycoin-cli settxfee 0) Tj T* ($ smileycoin-cli sendtoaddress B7UmedvHCqRrjqqDjyYdefrwfKeaGc776y 10) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 657.8236 cm
q
BT 1 0 0 1 0 14 Tm 1.287045 Tw 12 TL /F1 10 Tf 0 0 0 rg (We can see in a blockchain explorer that the transaction went through without a transaction fee. If the) Tj T* 0 Tw (receiver types ) Tj /F2 10 Tf (listunspent) Tj /F1 10 Tf ( the amount can be seen) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 516.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 110 Tm /F3 10 Tf 12 TL ({) Tj T* (    "txid" : "1ca23532a98e4bcc801e6475ba1069b775cc7a7b13aacadb31436755c50aa3) Tj T* (    8a",) Tj T* (    "vout" : 1,) Tj T* (    "address" : "B7UmedvHCqRrjqqDjyYdefrwfKeaGc776y",) Tj T* (    "account" : "",) Tj T* (    "scriptPubKey" : "76a914213a361732bdbb6858b580fd38c0f10c01aeb12f88ac",) Tj T* (    "amount" : 10.00000000,) Tj T* (    "confirmations" : 2) Tj T* (},) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 496.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (I was not expecting this transaction to get picked up by any miner, but for some reason it did.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 463.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 6) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 445.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In this task we will try to find out how the wallet adds data strings into transactions.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 427.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can create a raw transaction with the following command) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 372.749 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ smly createrawtransaction '[{ "txid":"78ee210bc6a5d822dd2e5244e2f40d3df590) Tj T* (97afc539a1067cdb7a5ba46e733a", "vout":1 }]' '{ "B8Yna8SDPM8sx52uScCjWNGmDAxr4yp5) Tj T* (NV":53.5 }') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 352.749 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This creates the following hex string that describes the transaction) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 297.8743 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (01000000013a736ea45b7adb7c06a139c5af9790f53d0df4e244522edd22d8a5c60b21ee7801) Tj T* (00000000ffffffff018085e23e010000001976a9142cf4c552cb6393a6c6db30356d39aeaf0999d5) Tj T* (eb88ac00000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 277.8743 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now let's create the same transaction, but add some data) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 222.9997 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ smly createrawtransaction '[{ "txid":"78ee210bc6a5d822dd2e5244e2f40d3df590) Tj T* (97afc539a1067cdb7a5ba46e733a", "vout":1 }]' '{ "B8Yna8SDPM8sx52uScCjWNGmDAxr4yp5) Tj T* (NV":53.5, "data":"4d" }') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 190.9997 cm
q
BT 1 0 0 1 0 14 Tm .315988 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that the data string must be in hex format. Here we added ) Tj /F4 10 Tf (4d) Tj /F1 10 Tf (, which is one byte and corresponds to) Tj T* 0 Tw (77 in decimal system and the letter M in ASCII. The resulting transaction hex string is) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 136.125 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (01000000013a736ea45b7adb7c06a139c5af9790f53d0df4e244522edd22d8a5c60b21ee7801) Tj T* (00000000ffffffff028085e23e010000001976a9142cf4c552cb6393a6c6db30356d39aeaf0999d5) Tj T* (eb88ac0000000000000000036a014d00000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 116.125 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (This string is identical to the hex string when there was no data, except for the following part at the end) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 82.92503 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (00000000036a014d00000000) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
42 0 obj
<<
/Length 5566
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 753.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Also, in the middle of the string, a ) Tj /F4 10 Tf (1) Tj /F1 10 Tf ( became a ) Tj /F4 10 Tf (2) Tj /F1 10 Tf ( \(presumably an output count field\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Now, if we now try adding ) Tj /F4 10 Tf (4d 4d 4d) Tj /F1 10 Tf ( the last part becomes) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 701.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (00000000056a034d4d4d00000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 645.8236 cm
q
BT 1 0 0 1 0 38 Tm .614989 Tw 12 TL /F1 10 Tf 0 0 0 rg (We can see how ) Tj /F4 10 Tf (4d 4d 4d) Tj /F1 10 Tf ( is encoded in the string. The question is what the bytes in front of that mean.) Tj T* 0 Tw -0.080009 Tw (First it was ) Tj /F4 10 Tf (03 6a 01) Tj /F1 10 Tf ( and now it is ) Tj /F4 10 Tf (05 6a 03) Tj /F1 10 Tf (. We can assume that this is some kind of a byte counter. When) Tj T* 0 Tw -0.015843 Tw (we changed the data from 1 to 3 bytes, the first part changed from ) Tj /F4 10 Tf (03) Tj /F1 10 Tf ( to ) Tj /F4 10 Tf (05) Tj /F1 10 Tf ( and the last part from ) Tj /F4 10 Tf (01) Tj /F1 10 Tf ( to ) Tj /F4 10 Tf (03) Tj /F1 10 Tf (.) Tj T* 0 Tw (It's also worth noting that ) Tj /F4 10 Tf (6a) Tj /F1 10 Tf ( is the hex code for the ) Tj /F4 10 Tf (OP_RETURN) Tj /F1 10 Tf ( script opcode.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 627.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can read the Bitcoin documentation to see the actual data structure) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 534.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 84 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F3 10 Tf 12 TL (Hex          Field           Data) Tj T* (------------------------------------) Tj T* (00000000     SMLY amount     0) Tj T* (05           Script length   5) Tj T* (6a034d4d4d   Script          OP_RETURN 03 4d 4d 4d) Tj T* (00000000     Lockcode        0) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 501.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 7) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 471.6236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Creating and sending from multisig addresses.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 441.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .176488 Tw (In this example we show how a group of three people can create a shared address, such that the funds in) Tj T* 0 Tw (it can only be spent if two out of three people approve. This is called a multisig address.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 423.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Breki's public key) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 390.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (028587e4ac345c8ce734d75c560ab26ab4c96150a6a9eefce76c3d25b9165a30be) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 370.4236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Valdi's public key) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 337.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (02024265c781c484ad8ad1d5f70f353935e52fb1082fa02a4a1ecc59d7eafc264a) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 317.2236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Brynjar's public key) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 284.0236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (02f3f77ec20ef25c85efcedca9c99ba905cc0c9465cb4dbf71e88cc2eae1368e67) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 240.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .015542 Tw (Now we create a multisig address from the 3 public keys with the following command. We can specify how) Tj T* 0 Tw -0.016328 Tw (many signatures are needed to spend from the multisig, in this case 2. After that comes a JSON array with) Tj T* 0 Tw (the public keys) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 170.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F3 10 Tf 12 TL (  addmultisigaddress 2 '[) Tj T* (  "02024265c781c484ad8ad1d5f70f353935e52fb1082fa02a4a1ecc59d7eafc264a",) Tj T* ("028587e4ac345c8ce734d75c560ab26ab4c96150a6a9eefce76c3d25b9165a30be",) Tj T* ("02f3f77ec20ef25c85efcedca9c99ba905cc0c9465cb4dbf71e88cc2eae1368e67"]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 150.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The resulting multisig address is) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 117.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 97.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Each of us now transfers 100 SMLY to this multisig address.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 79.62362 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Brynjar sent funds to the multisig with the sendtoaddress command, with the following transaction id) Tj T* ET
Q
Q
 
endstream
endobj
43 0 obj
<<
/Length 5006
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 739.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (17184867fc42ad32441c452f1ca9e9a2ad08279cf00bf28b74a8942df4908e9e) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 709.8236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Spending from the multisig address) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 679.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.216235 Tw (Breki now wants to spend the money. He creates a raw transaction with Brynjar's transaction as input,) Tj T* 0 Tw (sends 9 SMLY to himself and the rest back to the multisig address.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 610.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F3 10 Tf 12 TL (createrawtransaction '[ {) Tj T* ("txid":"17184867fc42ad32441c452f1ca9e9a2ad08279cf00bf28b74a8942df4908e9e",) Tj T* ("vout":0} ]' '{"3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc":90,) Tj T* ("B7uV1XEpvcvCSEGU8u4Uwcg5oBTrNbTLj9":9}') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 590.6236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Breki uses signrawtransaction to sign the transaction hex) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 457.2444 cm
q
q
.941286 0 0 .941286 0 0 cm
q
1 0 0 1 6.6 7.011687 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 498 132 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 110 Tm /F3 10 Tf 12 TL ({ "hex" :) Tj T* ("01000000019e8e90f42d94a8748bf20bf09c2708ada2e9a91c2f451c4432ad42fc674818170) Tj T* (0000000b500483045022100d90d752b4c94930a47f17c73f760b7bc8133efe7cb2ee2120ef1ea0ef) Tj T* (ab6494b02201caf968e565aafd5eea10fe7c414209cd428124b829bd8edc33f05682b42e4d7014c69) Tj T* (522102024265c781c484ad8ad1d5f70f353935e52fb1082fa02a4a1ecc59d7eafc264a21028587e) Tj T* (4ac345c8ce734d75c560ab26ab4c96150a6a9eefce76c3d25b9165a30be2102f3f77ec20ef25c85e) Tj T* (fcedca9c99ba905cc0c9465cb4dbf71e88cc2eae1368e6753aeffffffff02001a71180200000017a) Tj T* (9147189f742ecbdadda408ffa38d2359345939ed0db8700e9a435000000001976a91425e6b85417a) Tj T* (23843a475567101a040e40a12a69a88ac00000000",) Tj T* ("complete" : false }) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 425.2444 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.268409 Tw (But he gets complete: false, because it also needs to be signed by Brynjar or Valdimar, to get the 2/3) Tj T* 0 Tw (required signatures.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 395.2444 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 3.034985 Tw (He sends the hex output to Brynjar who signs it again and uses sendrawtransaction to send the) Tj T* 0 Tw (transaction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 237.4742 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 156 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 134 Tm /F3 10 Tf 12 TL ({ "hex" :) Tj T* ("01000000019e8e90f42d94a8748bf20bf09c2708ada2e9a91c2f451c4432ad42fc674818170) Tj T* (0000000fdfe0000483045022100d90d752b4c94930a47f17c73f760b7bc8133efe7cb2ee2120ef1e) Tj T* (a0efab6494b02201caf968e565aafd5eea10fe7c414209cd428124b829bd8edc33f05682b42e4d70) Tj T* (1483045022100869675d3b556957dac55253d9503d22662407d240b98bf2ae5f150ac979c2401022) Tj T* (00c6a275bfb5639ba704c0ae5678b7df36098a1a55f5e5f7ae4ffadf2341a028f014c69522102024) Tj T* (265c781c484ad8ad1d5f70f353935e52fb1082fa02a4a1ecc59d7eafc264a21028587e4ac345c8ce) Tj T* (734d75c560ab26ab4c96150a6a9eefce76c3d25b9165a30be2102f3f77ec20ef25c85efcedca9c99) Tj T* (ba905cc0c9465cb4dbf71e88cc2eae1368e6753aeffffffff02001a71180200000017a9147189f74) Tj T* (2ecbdadda408ffa38d2359345939ed0db8700e9a435000000001976a91425e6b85417a23843a4755) Tj T* (67101a040e40a12a69a88ac00000000",) Tj T* ("complete" : true }) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 217.4742 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Now we have complete: true so we know that we have enough signatures.:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 94.00247 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 120 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 98 Tm /F3 10 Tf 12 TL (sendrawtransaction) Tj T* (01000000019e8e90f42d94a8748bf20bf09c2708ada2e9a91c2f451c4432ad42fc6748181700) Tj T* (000000fdfe0000483045022100d90d752b4c94930a47f17c73f760b7bc8133efe7cb2ee2120ef1ea) Tj T* (0efab6494b02201caf968e565aafd5eea10fe7c414209cd428124b829bd8edc33f05682b42e4d701) Tj T* (483045022100869675d3b556957dac55253d9503d22662407d240b98bf2ae5f150ac979c24010220) Tj T* (0c6a275bfb5639ba704c0ae5678b7df36098a1a55f5e5f7ae4ffadf2341a028f014c695221020242) Tj T* (65c781c484ad8ad1d5f70f353935e52fb1082fa02a4a1ecc59d7eafc264a21028587e4ac345c8ce7) Tj T* (34d75c560ab26ab4c96150a6a9eefce76c3d25b9165a30be2102f3f77ec20ef25c85efcedca9c99b) Tj T* (a905cc0c9465cb4dbf71e88cc2eae1368e6753aeffffffff02001a71180200000017a9147189f742) Tj T* ET
Q
Q
Q
Q
Q
 
endstream
endobj
44 0 obj
<<
/Length 5188
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.5818 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 36 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F3 10 Tf 12 TL (ecbdadda408ffa38d2359345939ed0db8700e9a435000000001976a91425e6b85417a23843a47556) Tj T* (7101a040e40a12a69a88ac00000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 709.5818 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can see all of this in a blockchain explorer:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 691.5818 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (https://chainz.cryptoid.info/smly/address.dws?3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc.html) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 658.5818 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 9) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 628.5818 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Creating and sending from multisig addresses.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 598.5818 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .371988 Tw (When we include data in a transaction, the wallet adds an output with zero as am ount and a script string) Tj T* 0 Tw (that includes OP_RETURN and the data.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 543.7072 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL ($ smly createrawtransaction '[{ "txid":"78ee210bc6a5d822dd2e5244e2f40d3df590) Tj T* (97afc539a1067cdb7a5ba46e733a", "vout":1 }]' '{ "B8Yna8SDPM8sx52uScCjWNGmDAxr4yp5) Tj T* (NV":50, "data":"4d6f6e65792066726f6d204272796e6a6172" }') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 511.7072 cm
q
BT 1 0 0 1 0 14 Tm .295488 Tw 12 TL /F1 10 Tf 0 0 0 rg (I encoded "Money from Brynjar" as ASCII, in hexadecimal the string becomes ) Tj /F2 10 Tf (4d 6f 6e 65 79 20 66 72 6f) Tj T* 0 Tw (6d 20 42 72 79 6e 6a 61 72) Tj /F1 10 Tf (. The output of the command above is) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 456.8325 cm
q
q
.952737 0 0 .952737 0 0 cm
q
1 0 0 1 6.6 6.927412 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 492 48 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F3 10 Tf 12 TL (01000000013a736ea45b7adb7c06a139c5af9790f53d0df4e244522edd22d8a5c60b21ee7801) Tj T* (00000000ffffffff0200f2052a010000001976a9142cf4c552cb6393a6c6db30356d39aeaf0999d5) Tj T* (eb88ac0000000000000000146a124d6f6e65792066726f6d204272796e6a617200000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 436.8325 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can see the data in the last part of the transaction hex) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 403.6325 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (0000000000000000146a124d6f6e65792066726f6d204272796e6a617200000000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 347.6325 cm
q
BT 1 0 0 1 0 38 Tm .054573 Tw 12 TL /F1 10 Tf 0 0 0 rg (The zeroes in the front are the amount in SMLY, in the case of data the amount i s zero. The next part is a) Tj T* 0 Tw .391353 Tw (script string, it starts with ) Tj /F2 10 Tf (14) Tj /F1 10 Tf ( which is the len gth of the script \(20 in decimal\). Next comes ) Tj /F2 10 Tf (6a) Tj /F1 10 Tf ( which is the) Tj T* 0 Tw .260988 Tw (opcode for OP_RETURN, then ) Tj /F2 10 Tf (12) Tj /F1 10 Tf ( which is the length of the data \(18 bytes in decimal\), and f inally the 18) Tj T* 0 Tw (byte long string. The zeros in the end are the locktime of the tra nsaction.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 317.6325 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Without OP_RETURN) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 287.6325 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.00144 Tw (We could for example encode data in the amount that we send. Let's say that afte r the decimal we will put) Tj T* 0 Tw (a sequence of numbers 01, 02, ... which correspond to the letters in the english alphabet) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 206.4325 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 72 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F3 10 Tf 12 TL (A = 01) Tj T* (B = 02) Tj T* (C = 03) Tj T* (...) Tj T* (Z = 26) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 174.4325 cm
q
BT 1 0 0 1 0 14 Tm .619461 Tw 12 TL /F1 10 Tf 0 0 0 rg (The string "SMLY" would correspond to ) Tj /F2 10 Tf (19 13 12 25) Tj /F1 10 Tf ( in this system. Let's send this string encoded in the) Tj T* 0 Tw (amount:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 141.2325 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL ($ smly sendtoaddress 3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc 0.19131225) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 121.2325 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We can see the transaction in the blockchain:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 103.2325 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (https://chainz.cryptoid.info/smly/address.dws?3C3MZFrc6Hvp9N3LJaxogCQdthrZPJn2Rc.htm) Tj T* ET
Q
Q
 
endstream
endobj
45 0 obj
<<
/Length 1264
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 744.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 10) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 714.0236 cm
q
BT 1 0 0 1 0 14 Tm .667633 Tw 12 TL /F1 10 Tf 0 0 0 rg (Add a command to the smileycoin-cli command set; test the command and send a pull request to github) Tj T* 0 Tw (\(to ) Tj 0 0 .501961 rg (https://github.com/tutor-web/smileyCoin) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 696.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Solution) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 678.0236 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (https://github.com/tutor-web/smileyCoin/pull/14) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Task 11) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.724983 Tw (Implement a new ATM-style feature, e.g. based on the ATM toolkit: monitor transactions and perform) Tj T* 0 Tw (some action\(s\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 597.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Solution) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 579.0236 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (https://github.com/Ingimarsson/smlymailer) Tj T* ET
Q
Q
 
endstream
endobj
46 0 obj
<<
/Nums [ 0 47 0 R 1 48 0 R 2 49 0 R 3 50 0 R 4 51 0 R 
  5 52 0 R 6 53 0 R 7 54 0 R ]
>>
endobj
47 0 obj
<<
/S /D /St 1
>>
endobj
48 0 obj
<<
/S /D /St 2
>>
endobj
49 0 obj
<<
/S /D /St 3
>>
endobj
50 0 obj
<<
/S /D /St 4
>>
endobj
51 0 obj
<<
/S /D /St 5
>>
endobj
52 0 obj
<<
/S /D /St 6
>>
endobj
53 0 obj
<<
/S /D /St 7
>>
endobj
54 0 obj
<<
/S /D /St 8
>>
endobj
xref
0 55
0000000000 65535 f 
0000000073 00000 n 
0000000134 00000 n 
0000000241 00000 n 
0000000353 00000 n 
0000000458 00000 n 
0000000573 00000 n 
0000000778 00000 n 
0000000983 00000 n 
0000001244 00000 n 
0000001505 00000 n 
0000001735 00000 n 
0000001941 00000 n 
0000002147 00000 n 
0000002353 00000 n 
0000002591 00000 n 
0000002828 00000 n 
0000003060 00000 n 
0000003252 00000 n 
0000003452 00000 n 
0000003646 00000 n 
0000003885 00000 n 
0000003991 00000 n 
0000004281 00000 n 
0000004356 00000 n 
0000004502 00000 n 
0000004593 00000 n 
0000004713 00000 n 
0000004834 00000 n 
0000004955 00000 n 
0000005115 00000 n 
0000005262 00000 n 
0000005398 00000 n 
0000005558 00000 n 
0000005705 00000 n 
0000005824 00000 n 
0000005946 00000 n 
0000006055 00000 n 
0000006163 00000 n 
0000011079 00000 n 
0000015284 00000 n 
0000020042 00000 n 
0000025184 00000 n 
0000030802 00000 n 
0000035860 00000 n 
0000041100 00000 n 
0000042416 00000 n 
0000042523 00000 n 
0000042557 00000 n 
0000042591 00000 n 
0000042625 00000 n 
0000042659 00000 n 
0000042693 00000 n 
0000042727 00000 n 
0000042761 00000 n 
trailer
<<
/ID 
[<e44febbf4f0434b9b70260a364c80e5a><e44febbf4f0434b9b70260a364c80e5a>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 22 0 R
/Root 21 0 R
/Size 55
>>
startxref
42795
%%EOF
